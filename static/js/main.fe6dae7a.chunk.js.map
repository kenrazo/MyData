{"version":3,"sources":["my-data/government/government-details.jsx","my-data/address/address-details.jsx","my-data/bank/bank-details.jsx","my-data/government/government-add.jsx","my-data/my-data.jsx","my-data/bank/bank-add.jsx","database.js","my-data/bank/bank-edit.jsx","App.js","serviceWorker.js","index.js"],"names":["GovernmentDetails","state","governmentDetails","sss","tin","pagibig","philhealth","page","this","props","handleChangePage","react_default","a","createElement","Paper_default","className","classes","root","Table_default","table","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","Button_default","variant","color","onClick","handleInnerOnChange","bind","Component","withStyles","theme","width","marginTop","spacing","unit","overflowX","minWidth","AddressDetails","BankDetails","bank","getBank","_this2","indexedDB","open","onsuccess","event","target","result","transaction","objectStore","getAll","setState","id","_this3","tx","delete","Number","oncomplete","onerror","_this4","button","component","Link","to","List_default","subheader","map","item","ListItem_default","key","bankId","react_router_dom","name","handleDelete","maxWidth","backgroundColor","palette","background","paper","position","overflow","maxHeight","listSection","ul","padding","margin","input","display","AddGovernment","container","noValidate","autoComplete","TextField_default","label","textField","flexWrap","marginLeft","marginRight","dense","menu","MyData","square","Tabs_default","value","indicatorColor","textColor","onChange","handleChange","centered","Tab_default","government_details","bank_details","address_details","government_add","BankAdd","accountNo","expiration","property","e","Object","defineProperty","data","oncompleteFunction","toBeInserted","history","push","put","handleOnChange","required","save","BankEdit","db","match","params","get","console","log","App","react_router","path","exact","Home","AddBank","EditBank","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","onupgradeneeded","objectStoreNames","contains","currentTarget","indexNames","createIndex","unique","createObjectStore","keyPath","autoIncrement","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fe6dae7a.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing.unit * 3,\r\n        overflowX: 'auto',\r\n    },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n});\r\n\r\nclass GovernmentDetails extends Component {\r\n    state = {\r\n        governmentDetails: {\r\n            sss: '123',\r\n            tin: '456',\r\n            pagibig: '789',\r\n            philhealth: '000'\r\n        },\r\n    }\r\n\r\n\r\n    handleInnerOnChange(page) {\r\n        this.props.handleChangePage(page);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper className={this.props.classes.root}>\r\n                    <Table className={this.props.classes.table}>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"right\">SSS</TableCell>\r\n                                <TableCell align=\"right\">Tin</TableCell>\r\n                                <TableCell align=\"right\">Pagibig</TableCell>\r\n                                <TableCell align=\"right\">Philhealth</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n\r\n                            <TableRow>\r\n                                <TableCell align=\"right\"> {this.state.governmentDetails.sss}</TableCell>\r\n                                <TableCell align=\"right\">{this.state.governmentDetails.tin}</TableCell>\r\n                                <TableCell align=\"right\">{this.state.governmentDetails.pagibig}</TableCell>\r\n                                <TableCell align=\"right\">{this.state.governmentDetails.philhealth}</TableCell>\r\n                                <TableCell align=\"right\"><Button variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={this.handleInnerOnChange.bind(this, 'addGovernment')}>\r\n                                    Add\r\n                            </Button>\r\n                                    <Button variant=\"contained\" color=\"primary\">\r\n                                        Edit\r\n                            </Button>\r\n                                    <Button variant=\"contained\" color=\"secondary\">\r\n                                        Delete\r\n                            </Button>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </Paper>\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n}\r\nGovernmentDetails.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(GovernmentDetails);","import React, { Component } from \"react\"\r\n\r\nclass AddressDetails extends Component{\r\n    render(){\r\n        return(\r\n            <h1>Address Details</h1>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddressDetails;","import React, { Component } from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n        position: 'relative',\r\n        overflow: 'auto',\r\n        maxHeight: 300,\r\n    },\r\n    listSection: {\r\n        backgroundColor: 'inherit',\r\n    },\r\n    ul: {\r\n        backgroundColor: 'inherit',\r\n        padding: 0,\r\n    },\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n});\r\n\r\n\r\nclass BankDetails extends Component {\r\n    state = {\r\n        bank: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getBank();\r\n    }\r\n    getBank() {\r\n        let db = indexedDB.open(\"MyData\");\r\n        db.onsuccess = (event) => {\r\n            let tx = event.target.result.transaction([\"bank\"], \"readonly\");\r\n            let store = tx.objectStore('bank');\r\n            let allItems = store.getAll();\r\n            allItems.onsuccess = (event) => {\r\n                //  console.log(event.target.result);\r\n                this.setState({ bank: event.target.result });\r\n            };\r\n        };\r\n    }\r\n\r\n    handleDelete(id) {\r\n        let db = indexedDB.open(\"MyData\");\r\n        db.onsuccess = (event) => {\r\n            let tx = event.target.result.transaction([\"bank\"], \"readwrite\");\r\n            let store = tx.objectStore(\"bank\");\r\n            store.delete(Number(id));\r\n            tx.oncomplete = event => {\r\n                this.getBank();\r\n            }\r\n            tx.onerror = event => {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button variant=\"contained\" color=\"primary\" className={this.props.classes.button}\r\n                    component={Link} to={\"/bank/new\"}>\r\n                    Add\r\n                 </Button>\r\n                <List className={this.props.classes.root} subheader={<li />}>\r\n                    {this.state.bank.map(item => (\r\n                        <ListItem key={item.bankId}>\r\n                            <Link to={\"/bank/edit/\" + item.bankId} >{item.name}</Link>\r\n                            <Button variant=\"contained\" color=\"secondary\" className={this.props.classes.button}\r\n                                onClick={this.handleDelete.bind(this, item.bankId)}>\r\n                                Delete\r\n                          </Button>\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nBankDetails.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(BankDetails);","import React, { Component } from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: 200,\r\n    },\r\n    dense: {\r\n        marginTop: 19,\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\n\r\nclass AddGovernment extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className={this.props.classes.container} noValidate autoComplete=\"off\">\r\n                    <TextField\r\n                        id=\"standard-name\"\r\n                        label=\"Name\"\r\n                        className={this.props.classes.textField}\r\n                        margin=\"normal\"\r\n                    />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddGovernment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AddGovernment);","import React, { Component } from \"react\"\r\nimport GovernmentDetails from \"./government/government-details\";\r\nimport BankDetails from \"./bank/bank-details\";\r\nimport AddressDetails from \"./address/address-details\";\r\nimport AddGovernment from \"./government/government-add\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\n\r\nclass MyData extends Component {\r\n    state = {\r\n        page: 'governmentPage'\r\n        \r\n    }\r\n    handleChangePage(page) {\r\n        this.setState({ page: page })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper square>\r\n                    <Tabs\r\n                        value={this.state.value}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        onChange={this.handleChange}\r\n                        centered\r\n                    >\r\n                        <Tab label=\"Government\" onClick={this.handleChangePage.bind(this, 'governmentPage')} />\r\n                        <Tab label=\"Bank\" onClick={this.handleChangePage.bind(this, 'bankPage')} />\r\n                        <Tab label=\"Address\" onClick={this.handleChangePage.bind(this, 'addressPage')} />\r\n                    </Tabs>\r\n                </Paper>\r\n                {this.state.page === 'governmentPage' ?\r\n                    <GovernmentDetails handleChangePage={this.handleChangePage.bind(this)} /> : null}\r\n                {this.state.page === 'bankPage' ?\r\n                    <BankDetails /> : null}\r\n                {this.state.page === 'addressPage' ?\r\n                    <AddressDetails /> : null}\r\n                {this.state.page === 'addGovernment' ?\r\n                    <AddGovernment /> : null}\r\n\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyData;","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from \"react-router-dom\";\r\nimport { saveToDb } from \"../../database\";\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: 200,\r\n    },\r\n    dense: {\r\n        marginTop: 19,\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    },\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n      },\r\n      input: {\r\n        display: 'none',\r\n      },\r\n});\r\n\r\n\r\nclass BankAdd extends Component {\r\n    state = {\r\n        name: '',\r\n        accountNo: '',\r\n        expiration: ''\r\n    }\r\n\r\n    handleOnChange(property,e){\r\n        this.setState({ [property]: e.target.value });\r\n    }\r\n\r\n    handleGoBack(e){\r\n\r\n    }\r\n\r\n    save() {\r\n        var toBeInserted = {\r\n            name: this.state.name,\r\n            accountNo: this.state.accountNo,\r\n            expiration: this.state.expiration\r\n        }\r\n        var result = saveToDb('bank', toBeInserted, (event) => {\r\n            this.props.history.push(\"/bank\"); \r\n        });   \r\n        \r\n         \r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Link to=\"/bank\">Back to list</Link>>\r\n                <TextField\r\n                    id=\"standard-name\"\r\n                    label=\"Name\"\r\n                    className={this.props.classes.textField}\r\n                    margin=\"normal\"\r\n                    value={this.state.name}\r\n                    onChange={this.handleOnChange.bind(this, \"name\")}\r\n                />\r\n\r\n                <TextField\r\n                    id=\"standard-uncontrolled\"\r\n                    label=\"Account no\"\r\n                    className={this.props.classes.textField}\r\n                    margin=\"normal\"\r\n                    value={this.state.accountNo}\r\n                    onChange={this.handleOnChange.bind(this, \"accountNo\")}\r\n                />\r\n\r\n                <TextField\r\n                    required\r\n                    id=\"standard-required\"\r\n                    label=\"Expiration\"\r\n                    className={this.props.classes.textField}\r\n                    margin=\"normal\"\r\n                    value={this.state.expiration}\r\n                    onChange={this.handleOnChange.bind(this, \"expiration\")}\r\n                />\r\n                <Button variant=\"contained\" className={this.props.classes.button} onClick={this.save.bind(this)}>\r\n                    Save\r\n               </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nBankAdd.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(BankAdd);\r\n","export const initialize = () => {\r\n   // alert('initialize');\r\n   // var databaserequest = window.indexedDB.open(\"MyData\", 1) //initial database\r\n   var databaserequest = window.indexedDB.open(\"MyData\", 3) //initial database\r\n\r\n    databaserequest.onupgradeneeded = function(event){\r\n        var db = event.target.result;\r\n\r\n        console.log(db);\r\n\r\n        if(!db.objectStoreNames.contains('bank')){\r\n            var table = db.createObjectStore(\"bank\", {keyPath: \"bankId\", autoIncrement: true});\r\n            table.createIndex(\"name\", \"name\", {unique: false});\r\n            table.createIndex(\"accountNo\", \"accountNo\", {unique: false});\r\n        }\r\n        else{\r\n            var table = event.currentTarget.transaction.objectStore(\"bank\");\r\n            if(!table.indexNames.contains(\"expiration\")){\r\n                table.createIndex(\"expiration\", \"expiration\", {unique: false});\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const saveToDb = (table, data, oncompleteFunction) => {\r\n    let db = indexedDB.open(\"MyData\");\r\n    db.onsuccess = (event) => {\r\n        let tx = event.target.result.transaction([table], \"readwrite\");\r\n        let store = tx.objectStore(table);\r\n        store.put(data);\r\n        tx.oncomplete = (event) => {\r\n            oncompleteFunction(event);\r\n        }\r\n        tx.onerror = (event) => {\r\n            oncompleteFunction(false);\r\n        }\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: 200,\r\n    },\r\n    dense: {\r\n        marginTop: 19,\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    },\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n      },\r\n      input: {\r\n        display: 'none',\r\n      },\r\n});\r\n\r\n\r\nclass BankEdit extends Component {\r\n    state = {\r\n        name: '',\r\n        accountNo: '',\r\n        expiration: '',\r\n    }\r\n\r\n    componentDidMount(){\r\n        let db = indexedDB.open(\"MyData\");\r\n        let id = Number(this.props.match.params.id);\r\n        db.onsuccess = (event) => {\r\n            let tx = event.target.result.transaction([\"bank\"], \"readonly\");\r\n            let store = tx.objectStore('bank');\r\n            let allItems = store.get(id);\r\n            allItems.onsuccess = (event) => {\r\n                console.log(event.target.result);\r\n               // this.setState({bank: event.target.result})\r\n                this.setState({name: event.target.result.name,\r\n                    accountNo: event.target.result.accountNo,\r\n                    expiration: event.target.result.expiration\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOnChange(property,e){\r\n        this.setState({ [property]: e.target.value });\r\n    }\r\n\r\n    handleGoBack(e){\r\n\r\n    }\r\n\r\n    save() {\r\n        let db = indexedDB.open(\"MyData\");\r\n        var toBeInserted = {\r\n            bankId: Number(this.props.match.params.id),\r\n            name: this.state.name,\r\n            accountNo: this.state.accountNo,\r\n            expiration: this.state.expiration\r\n        }\r\n        db.onsuccess = (event) => {\r\n            let tx = event.target.result.transaction(['bank'], \"readwrite\");\r\n            let store = tx.objectStore('bank');\r\n            store.put(toBeInserted);\r\n            tx.oncomplete = (event) => {\r\n                this.props.history.push(\"/bank\");\r\n            }\r\n            tx.onerror = (event) => {\r\n\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Link to=\"/bank\">Back to list</Link>>\r\n                <TextField\r\n                    id=\"standard-name\"\r\n                    label=\"Name\"\r\n                    className={this.props.classes.textField}\r\n                    margin=\"normal\"\r\n                    value={this.state.name}\r\n                    onChange={this.handleOnChange.bind(this, \"name\")}\r\n                />\r\n\r\n                <TextField\r\n                    id=\"standard-uncontrolled\"\r\n                    label=\"Account no\"\r\n                    className={this.props.classes.textField}\r\n                    margin=\"normal\"\r\n                    value={this.state.accountNo}\r\n                    onChange={this.handleOnChange.bind(this, \"accountNo\")}\r\n                />\r\n\r\n                <TextField\r\n                    required\r\n                    id=\"standard-required\"\r\n                    label=\"Expiration\"\r\n                    className={this.props.classes.textField}\r\n                    margin=\"normal\"\r\n                    value={this.state.expiration}\r\n                    onChange={this.handleOnChange.bind(this, \"expiration\")}\r\n                />\r\n                <Button variant=\"contained\" className={this.props.classes.button} onClick={this.save.bind(this)}>\r\n                    Save\r\n               </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nBankEdit.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(BankEdit);\r\n","import React from \"react\";\r\nimport './App.css';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport GovernmentDetails from './my-data/government/government-details';\r\nimport AddressDetails from './my-data/address/address-details';\r\nimport BankDetails from './my-data/bank/bank-details';\r\nimport Home from './my-data/my-data';\r\nimport AddBank from './my-data/bank/bank-add';\r\nimport EditBank from './my-data/bank/bank-edit';\r\n\r\nfunction App() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/home\" exact component={Home} />\r\n      <Route path=\"/government\" exact component={GovernmentDetails} />\r\n      <Route path=\"/address\" exact component={AddressDetails} />\r\n      <Route path=\"/\" exact component={BankDetails} />\r\n      <Route path=\"/bank/new\" exact component={AddBank} />\r\n      <Route path=\"/bank/edit/:id\" exact component={EditBank} />\r\n      <Route path=\"*\" component={BankDetails} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'typeface-roboto';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { initialize } from \"./database\";\r\n\r\ninitialize();\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}